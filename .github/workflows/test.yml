name: Tests

on:
  push:
    branches:
    - main
    - dev
    - memory-testing
    - github-ci
  workflow_dispatch:

permissions:
  contents: read

jobs:
  
  test-windows-msvc:
    runs-on: windows-latest
    
    env:
      CC: cl
      CXX: cl
    
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - uses: lukka/get-cmake@v3.29.2
    
    - uses: ilammy/msvc-dev-cmd@v1
    
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install LLVM and Clang
      uses: KyleMayes/install-llvm-action@v1.8.3
      with:
        version: "16"
    
    - name: Install Libclang
      run: python -m pip install libclang
    
    - name: Generate GLEW sources
      working-directory: SanableEngine/libs/glew/auto
      run: make
    
    - run: mkdir SanableEngine\builds\Win64-MSVC
    
    - name: Generate build files
      run: cmake -S SanableEngine -B SanableEngine/builds/Win64-MSVC/intermediate -G Ninja
    
    - name: Build everything
      run: cmake --build SanableEngine/builds/Win64-MSVC/intermediate
    
    - name: Test everything
      run: ctest --test-dir SanableEngine/builds/Win64-MSVC/intermediate --output-junit test-results/Win64-MSVC.xml
    
    - name: Upload reports
      uses: actions/upload-artifact@v3.1.0
      with:
        path: test-results
        name: Test-Report-Windows-MSVC
  
  
  #test-windows-msys:
  #  runs-on: windows-latest
  #  
  #  env:
  #    CC: gcc
  #    CXX: g++
  #  
  #  steps:
  #  - uses: actions/checkout@v3
  #    with:
  #      submodules: recursive
  #  
  #  - uses: msys2/setup-msys2@v2
  #  
  #  - name: Install Git, Python, Pip, CMake, Make, Clang
  #    shell: msys2 {0}
  #    run: pacman -S --noconfirm git python python-pip cmake make clang
  #      
  #  - name: Install Libclang
  #    shell: msys2 {0}
  #    run: python -m pip install libclang
  #  
  #  - name: Generate GLEW sources
  #    working-directory: SanableEngine/libs/glew/auto
  #    shell: msys2 {0}
  #    run: make
  #  
  #  - run: mkdir SanableEngine\builds\Win64-MSYS
  #  
  #  - name: Generate build files
  #    shell: msys2 {0}
  #    run: cmake -S SanableEngine -B SanableEngine/builds/Win64-MSYS/intermediate -G "Unix Makefiles"
  #  
  #  - name: Build everything
  #    shell: msys2 {0}
  #    run: cmake --build SanableEngine/builds/Win64-MSYS/intermediate
  #  
  #  - name: Test everything
  #    shell: msys2 {0}
  #    run: ctest --test-dir SanableEngine/builds/Win64-MSYS/intermediate --output-junit test-results/Win64-MSYS.xml
  #  
  #  - name: Upload reports
  #    uses: actions/upload-artifact@v3.1.0
  #    with:
  #      path: test-results
  #      name: Test-Report-Windows-MSYS
  
  test-windows-clang:
    runs-on: windows-latest
    
    env:
      CC: clang
      CXX: clang++
    
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    
    - uses: lukka/get-cmake@v3.29.2
    
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install LLVM and Clang
      uses: KyleMayes/install-llvm-action@v1.8.3
      with:
        version: "16"
    
    - name: Install Libclang
      run: python -m pip install libclang
    
    - name: Generate GLEW sources
      working-directory: SanableEngine/libs/glew/auto
      run: make
    
    - run: mkdir SanableEngine\builds\Win64-clang
    
    - name: Generate build files
      run: cmake -S SanableEngine -B SanableEngine/builds/Win64-clang/intermediate -G Ninja
    
    - name: Build everything
      run: cmake --build SanableEngine/builds/Win64-clang/intermediate
    
    - name: Test everything
      run: ctest --test-dir SanableEngine/builds/Win64-clang/intermediate --output-junit test-results/Win64-clang.xml
    
    - name: Upload reports
      uses: actions/upload-artifact@v3.1.0
      with:
        path: test-results
        name: Test-Report-Windows-clang
  
  collate:
    runs-on: windows-latest
    
    needs: [
      test-windows-msvc,
      #test-windows-msys,
      test-windows-clang
    ]
    
    steps:
    - name: Get results
      uses: actions/download-artifact@v3
    
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      with:
        report_paths: 'test-results/*.xml'
        