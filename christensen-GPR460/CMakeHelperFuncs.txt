# Support both 32 and 64 bit builds
if (${CMAKE_SIZEOF_VOID_P} MATCHES 8)
  set(ARCH_NAME x64)
else ()
  set(ARCH_NAME x86)
endif ()

function(export_dll dll project)
	if (WIN32)
        add_custom_command(
            TARGET ${project} POST_BUILD
            COMMAND "${CMAKE_COMMAND}" -E copy_if_different "$<TARGET_FILE:${dll}>" "$<TARGET_FILE_DIR:${project}>"
            VERBATIM
        )
    endif()
endfunction()

function(export_plugin_dll project)
    set_target_properties(${project} PROPERTIES
	    ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/plugins/${project}"
	    LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/plugins/${project}"
	    RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/plugins/${project}"
    )
endfunction()

function(declare_plugin name sources)
    add_library(${name} SHARED ${sources}) # FIXME make MODULE?
    if (EMSCRIPTEN)
        target_link_options(${project} PRIVATE -sSIDE_MODULE)
        set_target_properties(${name} PROPERTIES
	        OUTPUT_NAME "${name}"
	        SUFFIX "so"
        )
    endif()
endfunction()

function(set_linkage_static project)
    if (EMSCRIPTEN)
        target_link_options(${project} PRIVATE -sMAIN_MODULE)
    endif()
endfunction()

function(set_linkage_shared project)
    if (EMSCRIPTEN)
        target_link_options(${project} PRIVATE -sSIDE_MODULE)
    endif()
endfunction()